pipeline {
    agent any
    
    tools {
        maven 'Maven-3.8.4'
        jdk 'jdk17'
    }

    environment {
        REPO_URL = "https://github.com/imrankhanmohammad257/hiring-app.git"
        DOCKER_IMAGE = "hiring-app"
        DOCKER_USER = credentials('dockerhub-user') // dockerhub creds id
    }

    stages {

        stage('Checkout Code') {
            steps {
                git branch: 'main', url: "${REPO_URL}"
            }
        }

        stage('Build with Maven') {
            steps {
                sh "mvn clean package -DskipTests"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh "mvn sonar:sonar"
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-creds', 
                    usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {

                    sh """
                        mvn deploy -DskipTests \
                          -Dnexus.username=$NEXUS_USER \
                          -nexus.password=$NEXUS_PASS
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:latest ."
                }
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                script {
                    sh """
                        echo ${DOCKER_USER_PSW} | docker login -u ${DOCKER_USER_USR} --password-stdin
                        docker tag ${DOCKER_IMAGE}:latest ${DOCKER_USER_USR}/${DOCKER_IMAGE}:latest
                        docker push ${DOCKER_USER_USR}/${DOCKER_IMAGE}:latest
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ CI Pipeline Completed Successfully!"
        }
        failure {
            echo "❌ CI Pipeline Failed!"
        }
    }
}
